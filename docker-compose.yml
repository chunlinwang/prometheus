version: '3.9'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    depends_on:
      - pushgateway
    networks:
      - monitoring

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    restart: unless-stopped
    command:
      # - '--web.listen-address=9091'
      - '--web.telemetry-path=/metrics'
    ports:
      - 9091:9091
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-enterprise:8.2.0
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

  app1:
    container_name: app1
    build:
      context: ./app
      args:
        NODE_VERSION: 22.0.0
        ALPINE_VERSION: 3.19
    environment:
      PORT: 3001
      PROMETHEUS_PUSH_GATEWAY: 'http://pushgateway:9091'
    networks:
      - monitoring
    volumes:
      - ./app:/app
    working_dir: /app
    depends_on:
      - prometheus
    tty: true
    ports:
      - 3001:3001

  app2:
    container_name: app2
    build:
      context: ./app
      args:
        NODE_VERSION: 22.0.0
        ALPINE_VERSION: 3.19
    environment:
      PORT: 3002
      PROMETHEUS_PUSH_GATEWAY: 'http://pushgateway:9091'
    networks:
      - monitoring
    volumes:
      - ./app:/app
    working_dir: /app
    depends_on:
      - prometheus
    tty: true
    ports:
      - 3002:3002

  app3:
    container_name: app3
    build:
      context: ./app
      args:
        NODE_VERSION: 22.0.0
        ALPINE_VERSION: 3.19
    environment:
      PORT: 3003
      PROMETHEUS_PUSH_GATEWAY: 'http://pushgateway:9091'
    networks:
      - monitoring
    volumes:
      - ./app:/app
    working_dir: /app
    depends_on:
      - prometheus
    tty: true
    ports:
      - 3003:3003
